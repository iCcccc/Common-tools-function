
1. URL字符串转化为对象
  /**
  *  @method type 格式化URL字符串函数
  *  @param {url} 需要转换的url
  *  @return {Object}
  */
  function parseURL(url) { 
    var parser = document.createElement('a'), 
        searchObject = {}, 
        queries, split, i; 
    // Let the browser do the work 
    parser.href = url; 
    // Convert query string to object 
    queries = parser.search.replace(/^\?/, '').split('&'); 
    for( i = 0; i < queries.length; i++ ) { 
      split = queries[i].split('='); 
      searchObject[split[0]] = split[1]; 
    } 
    return { 
      protocol: parser.protocol, 
      host: parser.host, 
      hostname: parser.hostname, 
      port: parser.port, 
      pathname: parser.pathname, 
      search: parser.search, 
      searchObject: searchObject, 
      hash: parser.hash
    }; 
  } 
	
  2. 判断对象具体类型
  /**
  *  返回数据类型的字符串形式
  *  数字类型:"number" 
  *  布尔类型:"boolean" 
  *  字符串类型:"string" 
  *  数组类型:"array"
  *  日期类型:"date"
  *  正则表达式类型:"regexp" 
  *  函数类型:"function"
  *  对象类型:"object"
  *  null类型:"null"
  *  undefined类型:"undefined"
  *  其他类型:"unknow"
  *  @method type 数据类型检测函数
  *  @param {Any} v 被检测的变量
  *  @return {String}
  */
  function type(v){
    var type = typeof v;
    var result = 'unknow';
    if(type === 'object'){
      type = Object.prototype.toString.call(v);
      if(type === '[object Array]'){
        result = 'array';
      }else if(type === '[object Date]'){
        result = 'date';
      }else if(type === '[object Regexp]'){
        result = 'regexp';
      }else if(type === '[object Object]'){
        result = 'object';
      }else if(type === '[object Null]'){
        result = 'null';
      }
    }
    return result;
  }
	
  3. 移动设备类型检测
  /**
  *  @method type 移动设备类型检测
  *  @return {Boolean}
  */
  var isMobile = { 
    Android: function() { 
      return navigator.userAgent.match(/Android/i); 
    }, 
    BlackBerry: function() { 
      return navigator.userAgent.match(/BlackBerry/i); 
    }, 
    iOS: function() { 
      return navigator.userAgent.match(/iPhone|iPad|iPod/i); 
    }, 
    Opera: function() { 
      return navigator.userAgent.match(/Opera Mini/i); 
    }, 
    Windows: function() { 
      return navigator.userAgent.match(/IEMobile/i); 
    }, 
    any: function() { 
      return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows()); 
    } 
  }; 
  eg: isMobile.iOS() //true or false
  
	
  
  
  
  
